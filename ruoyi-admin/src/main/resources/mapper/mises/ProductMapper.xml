<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.mises.mapper.ProductMapper">
    
    <resultMap type="Product" id="ProductResult">
        <result property="productId"    column="product_id"    />
        <result property="productName"    column="product_name"    />
        <result property="categoryName"    column="category"    />
        <result property="unit"    column="unit"    />
        <result property="specification"    column="specification"    />
        <result property="description"    column="description"    />
    </resultMap>

    <sql id="selectProductVo">
        select product_id, product_name, category, unit, specification, description from product
    </sql>

    <select id="selectProductList" parameterType="Product" resultMap="ProductResult">
        <include refid="selectProductVo"/>
        <where>  
            <if test="productId != null "> and product_id = #{productId}</if>
            <if test="productName != null  and productName != ''"> and product_name like concat('%', #{productName}, '%')</if>
            <if test="categoryName != null "> and category = #{categoryName}</if>
            <if test="unit != null  and unit != ''"> and unit = #{unit}</if>
        </where>
    </select>
    
    <select id="selectProductByProductId" parameterType="Long" resultMap="ProductResult">
        <include refid="selectProductVo"/>
        where product_id = #{productId}
    </select>

    <insert id="insertProduct" parameterType="Product" useGeneratedKeys="true" keyProperty="productId">
        insert into product
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="productName != null and productName != ''">product_name,</if>
            <if test="categoryName != null">category,</if>
            <if test="unit != null and unit != ''">unit,</if>
            <if test="specification != null">specification,</if>
            <if test="description != null">description,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="productName != null and productName != ''">#{productName},</if>
            <if test="categoryName != null">#{categoryName},</if>
            <if test="unit != null and unit != ''">#{unit},</if>
            <if test="specification != null">#{specification},</if>
            <if test="description != null">#{description},</if>
         </trim>
    </insert>

    <update id="updateProduct" parameterType="Product">
        update product
        <trim prefix="SET" suffixOverrides=",">
            <if test="productName != null and productName != ''">product_name = #{productName},</if>
            <if test="categoryName != null">category = #{categoryName},</if>
            <if test="unit != null and unit != ''">unit = #{unit},</if>
            <if test="specification != null">specification = #{specification},</if>
            <if test="description != null">description = #{description},</if>
        </trim>
        where product_id = #{productId}
    </update>

    <delete id="deleteProductByProductId" parameterType="Long">
        delete from product where product_id = #{productId}
    </delete>

    <delete id="deleteProductByProductIds" parameterType="String">
        delete from product where product_id in 
        <foreach item="productId" collection="array" open="(" separator="," close=")">
            #{productId}
        </foreach>
    </delete>
</mapper>