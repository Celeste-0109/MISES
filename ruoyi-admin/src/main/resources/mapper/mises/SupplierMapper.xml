<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.mises.mapper.SupplierMapper">
    
    <resultMap type="Supplier" id="SupplierResult">
        <result property="supplierId"    column="supplier_id"    />
        <result property="name"    column="name"    />
        <result property="region"    column="region"    />
        <result property="contactPerson"    column="contact_person"    />
        <result property="contactPhone"    column="contact_phone"    />
        <result property="address"    column="address"    />
        <result property="email"    column="email"    />
    </resultMap>

    <sql id="selectSupplierVo">
        select supplier_id, name, region, contact_person, contact_phone, address, email from supplier
    </sql>

    <select id="selectSupplierList" parameterType="Supplier" resultMap="SupplierResult">
        <include refid="selectSupplierVo"/>
        <where>  
            <if test="supplierId != null "> and supplier_id = #{supplierId}</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="region != null  and region != ''"> and region like concat('%', #{region}, '%')</if>
            <if test="contactPerson != null  and contactPerson != ''"> and contact_person like concat('%', #{contactPerson}, '%')</if>
            <if test="contactPhone != null  and contactPhone != ''"> and contact_phone = #{contactPhone}</if>
            <if test="address != null  and address != ''"> and address like concat('%', #{address}, '%')</if>
            <if test="email != null  and email != ''"> and email = #{email}</if>
        </where>
    </select>
    
    <select id="selectSupplierBySupplierId" parameterType="Long" resultMap="SupplierResult">
        <include refid="selectSupplierVo"/>
        where supplier_id = #{supplierId}
    </select>

    <insert id="insertSupplier" parameterType="Supplier" useGeneratedKeys="true" keyProperty="supplierId">
        insert into supplier
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">name,</if>
            <if test="region != null and region != ''">region,</if>
            <if test="contactPerson != null and contactPerson != ''">contact_person,</if>
            <if test="contactPhone != null and contactPhone != ''">contact_phone,</if>
            <if test="address != null">address,</if>
            <if test="email != null">email,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">#{name},</if>
            <if test="region != null and region != ''">#{region},</if>
            <if test="contactPerson != null and contactPerson != ''">#{contactPerson},</if>
            <if test="contactPhone != null and contactPhone != ''">#{contactPhone},</if>
            <if test="address != null">#{address},</if>
            <if test="email != null">#{email},</if>
         </trim>
    </insert>

    <update id="updateSupplier" parameterType="Supplier">
        update supplier
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="region != null and region != ''">region = #{region},</if>
            <if test="contactPerson != null and contactPerson != ''">contact_person = #{contactPerson},</if>
            <if test="contactPhone != null and contactPhone != ''">contact_phone = #{contactPhone},</if>
            <if test="address != null">address = #{address},</if>
            <if test="email != null">email = #{email},</if>
        </trim>
        where supplier_id = #{supplierId}
    </update>

    <delete id="deleteSupplierBySupplierId" parameterType="Long">
        delete from supplier where supplier_id = #{supplierId}
    </delete>

    <delete id="deleteSupplierBySupplierIds" parameterType="String">
        delete from supplier where supplier_id in 
        <foreach item="supplierId" collection="array" open="(" separator="," close=")">
            #{supplierId}
        </foreach>
    </delete>
</mapper>